-- Create database
CREATE DATABASE IF NOT EXISTS job_portal;
USE job_portal;

-- USERS TABLE
CREATE TABLE users (
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100) NOT NULL,
email VARCHAR(100) NOT NULL UNIQUE,
password VARCHAR(255) NOT NULL,
user_type ENUM('seeker', 'employer') NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- JOBS TABLE
CREATE TABLE jobs (
id INT AUTO_INCREMENT PRIMARY KEY,
employer_id INT NOT NULL,
title VARCHAR(150) NOT NULL,
description TEXT NOT NULL,
location VARCHAR(100),
salary VARCHAR(100),
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (employer_id) REFERENCES users(id) ON DELETE CASCADE
);

-- RESUMES TABLE
CREATE TABLE resumes (
id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT NOT NULL,
filename VARCHAR(255) NOT NULL,
filepath VARCHAR(255) NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- APPLICATIONS TABLE
CREATE TABLE applications (
id INT AUTO_INCREMENT PRIMARY KEY,
job_id INT NOT NULL,
seeker_id INT NOT NULL,
status ENUM('applied', 'reviewed', 'shortlisted', 'rejected', 'hired') DEFAULT 'applied',
applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (job_id) REFERENCES jobs(id) ON DELETE CASCADE,
FOREIGN KEY (seeker_id) REFERENCES users(id) ON DELETE CASCADE
);

-- INTERVIEWS TABLE
CREATE TABLE interviews (
id INT AUTO_INCREMENT PRIMARY KEY,
application_id INT NOT NULL,
employer_id INT NOT NULL,
interview_time DATETIME NOT NULL,
location VARCHAR(255),
FOREIGN KEY (application_id) REFERENCES applications(id) ON DELETE CASCADE,
FOREIGN KEY (employer_id) REFERENCES users(id) ON DELETE CASCADE
);

-- JOB ALERTS TABLE
CREATE TABLE job_alerts (
id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT NOT NULL,
keywords VARCHAR(255) NOT NULL,
created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
